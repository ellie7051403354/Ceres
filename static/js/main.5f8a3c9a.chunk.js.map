{"version":3,"sources":["utils/cobweb.ts","utils/getWeb3.ts","store/i18n.ts","store/user.ts","store/index.ts","serviceWorker.ts","routers/Loading.tsx","routers/config.tsx","routers/index.tsx","theme.ts","index.tsx","utils/tools.ts"],"names":["data","win","window","a","Promise","resolve","reject","addEventListener","ethereum","web3","Web3","enable","console","log","provider","providers","HttpProvider","eth","getAccounts","accounts","net","getId","networkId","cobWebNetwork","Wnetworks","_cobWeb","Contract","Wabi","address","cobCoreNetwork","networks","_cobCore","abi","cobWeb","cobCore","account","cobWebAddres","cobCoreAddres","error","config","locale","lang","zhCN","enUS","xiGR","defLocale","I18nStore","action","bound","_data","store","get","this","set","location","reload","key","observable","i18n","UserStore","init","levelName","levelImages","cobweb","methods","getUserInfo","call","userInfo","getSubNodes","subNodes","subNodesnumber","length","userAddress","ref","available","readyTime","term","level","levelImage","idxInvest","status","subNode","utils","fromWei","selfNode","refBonus","touchBonus","vBonus","idSindou","getCurrentInvestAmount","amount","nodeInvest","getTermInfo","investAmount","terms","number","getPartAmount","partAmount","lottery","game","crowd","userStore","Boolean","hostname","match","Loading","routerConfig","path","exact","component","Loadable","loader","loading","BasicRoute","map","item","render","props","React","theme","createMuiTheme","palette","primary","main","secondary","red","A400","background","default","overrides","MuiOutlinedInput","input","padding","adornedEnd","paddingRight","MuiInputBase","root","borderRadius","borderWidth","borderColor","formControl","MuiTouchRipple","MuiTab","textColorPrimary","color","MuiTabs","indicator","height","generateClassName","createGenerateClassName","productionPrefix","ReactDOM","StylesProvider","ThemeProvider","CssBaseline","closeButton","hideProgressBar","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","toast","message","autoClose","isAddressNo","dateFormat","fmt","time","ret","date","Date","parseInt","opt","getFullYear","toString","getMonth","getDate","getHours","getMinutes","getSeconds","k","RegExp","exec","replace","padStart"],"mappings":"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","file":"static/js/main.5f8a3c9a.chunk.js","sourcesContent":["import getWeb3 from \"./getWeb3\";\nimport { abi as Wabi, networks as Wnetworks } from \"../contracts/CobWeb.json\";\nimport { abi, networks } from \"../contracts/CobCore.json\";\nimport { error } from \"./tools\";\n\nexport interface IWeb3Store {\n  web3: any;\n  account: string;\n  cobWeb: any;\n  cobCore: any;\n  cobWebAddres: string;\n  cobCoreAddres: string;\n}\nlet data: IWeb3Store;\nlet win: any = window;\n\nexport default async () => {\n  if (!data) {\n    try {\n      const web3: any = await getWeb3();\n      const accounts: any = await web3.eth.getAccounts();\n      const networkId: number = await web3.eth.net.getId();\n\n      const cobWebNetwork = Wnetworks[networkId];\n      const _cobWeb = new web3.eth.Contract(\n        Wabi,\n        cobWebNetwork && cobWebNetwork.address\n      );\n\n      const cobCoreNetwork = networks[networkId];\n      const _cobCore = new web3.eth.Contract(\n        abi,\n        cobCoreNetwork && cobCoreNetwork.address\n      );\n\n      win.cobWeb = _cobWeb;\n      win.cobCore = _cobCore;\n      win.networkId = networkId;\n      win.cobWebNetwork = cobWebNetwork;\n      win.cobCoreNetwork = cobCoreNetwork;\n\n      data = {\n        web3: web3,\n        account: accounts[0],\n        cobWeb: _cobWeb,\n        cobCore: _cobCore,\n        cobWebAddres: cobWebNetwork.address,\n        cobCoreAddres: cobCoreNetwork.address\n      };\n    } catch (err) {\n      error(err);\n    }\n  }\n  return data;\n};\n","import Web3 from \"web3\";\n\ninterface Window {\n  ethereum: any;\n  web3: any;\n  addEventListener: any;\n}\ndeclare var window: Window;\n\nexport default() => \n  new Promise((resolve, reject) => {\n    // Wait for loading completion to avoid race conditions with web3 injection timing.\n    window.addEventListener(\"load\", async () => {\n      // Modern dapp browsers...\n      if (window.ethereum) {\n        const web3: any = new Web3(window.ethereum);\n        try {\n          // Request account access if needed\n          await window.ethereum.enable();\n          // Acccounts now exposed\n          resolve(web3);\n        } catch (error) {\n          reject(error);\n        }\n      }\n      // Legacy dapp browsers...\n      else if (window.web3) {\n        // Use Mist/MetaMask's provider.\n        const web3: any = window.web3;\n        console.log(\"Injected web3 detected.\");\n        resolve(web3);\n      }\n      // Fallback to localhost; use dev console port by default...\n      else {\n        const provider: any = new Web3.providers.HttpProvider(\n          \"http://127.0.0.1:9545\"\n        );\n        const web3: any = new Web3(provider);\n        console.log(\"No web3 instance injected, using Local web3.\");\n        resolve(web3);\n      }\n    });\n  });","import { action, observable } from \"mobx\";\nimport zhCN from \"../locales/zh-CN.json\";\nimport enUS from \"../locales/en-US.json\";\nimport xiGR from \"../locales/xi-GR.json\";\nimport store from \"store\";\n\nconst config: any = {\n  \"zh-CN\": {\n    locale: \"zh-CN\",\n    lang: zhCN\n  },\n  \"en-US\": {\n    locale: \"en-US\",\n    lang: enUS\n  },\n  \"xi-GR\": {\n    locale: \"xi-GR\",\n    lang: xiGR\n  }\n};\n\nconst defLocale = \"xi-GR\";\n\n//类型\nexport interface I18nStore {\n  data: any;\n  locale: string;\n  changeLang(host: string): void;\n  i18n(key: string): void;\n}\n\nexport class I18nStore implements I18nStore {\n  @observable\n  public data: any;\n\n  @observable\n  public locale: string = \"\";\n\n  constructor() {\n    const _data = config[store.get(\"I18nStore\") || defLocale];\n    this.data = _data.lang;\n    this.locale = _data.locale;\n  }\n\n  @action.bound\n  public changeLang(locale: string): void {\n    if(this.locale == locale) return;\n    store.set(\"I18nStore\", locale);\n    window.location.reload();\n  }\n\n  @action.bound\n  public i18n(key: string): string {\n    return this.data[key] || \"no key data\";\n  }\n}\n","import { action, observable } from \"mobx\";\nimport cobweb from \"src/utils/cobweb\";\nimport { error } from \"src/utils/tools\";\nimport { I18nStore } from \"./i18n\";\n// import _store from \"src/store\";\n// const { i18n } = _store.i18n;\nconst { i18n } = new I18nStore();\n//类型\nexport interface IUserStore {\n  userAddress: string;\n  ref: string;\n  available: string;\n  readyTime: string;\n  term: string;\n  level: string;\n  idxInvest: string;\n  status: string;\n  subNode: string;\n  selfNode: string;\n  amount: string;\n  init: any;\n  subNodes: string[];\n  subNodesnumber: number;\n  investAmount: string;\n  terms: string;\n  number: string;\n  refBonus: string;\n  touchBonus: string;\n  vBonus: string;\n  idSindou: string;\n  levelImage: string;\n  lottery: string;\n  game: string;\n  crowd: string;\n}\n\nexport class UserStore implements IUserStore {\n  @observable\n  public userInfo: any = {};\n  @observable\n  userAddress = \"0x0000000000000000000000000000000000000000\";\n  @observable\n  ref = \"0x0000000000000000000000000000000000000000\";\n  @observable\n  available = \"0\";\n  @observable\n  readyTime = \"0\";\n  @observable\n  term = \"0\";\n  @observable\n  // 普通玩家\n  level = i18n(\"83\");\n  @observable\n  idxInvest = \"0\";\n  @observable\n  status = \"0\";\n  @observable\n  subNode = \"0\";\n  @observable\n  selfNode = \"0\";\n  @observable\n  amount = \"0\";\n  @observable\n  subNodes = [];\n  @observable\n  subNodesnumber = 0;\n  @observable\n  investAmount = \"0\";\n  @observable\n  terms = \"0\";\n  @observable\n  number = \"0\";\n  @observable\n  refBonus = \"0\";\n  @observable\n  touchBonus = \"0\";\n  @observable\n  vBonus = \"0\";\n  @observable\n  idSindou = \"0\";\n  @observable\n  levelImage = \"\";\n\n  @observable\n  lottery = \"0\";\n  @observable\n  game = \"0\";\n  @observable\n  crowd = \"0\";\n\n  constructor() {\n    this.init();\n  }\n\n  @action.bound\n  async init() {\n    // \"普通玩家\",\"考伊斯\",\"哈迪斯\",\"阿波罗\",\"雅典娜\"\n    const levelName = [\n      i18n(\"83\"),\n      i18n(\"84\"),\n      i18n(\"85\"),\n      i18n(\"86\"),\n      i18n(\"87\"),\n      i18n(\"101\")\n    ];\n\n    const levelImages = [\"\", \"Coeus\", \"Hades\", \"Apollo\", \"Athene\", \"Ceres\"];\n    try {\n      const { cobWeb, account, web3 } = await cobweb();\n      const userInfo = await cobWeb.methods.getUserInfo(account).call();\n      // userInfo[\"level\"] = 1;\n      // console.log(userInfo);\n      this.subNodes = await cobWeb.methods.getSubNodes(account).call();\n      this.subNodesnumber = this.subNodes.length;\n      this.userAddress = account;\n      this.ref = userInfo[\"ref\"];\n      this.available = userInfo[\"available\"];\n      this.readyTime = userInfo[\"readyTime\"];\n      this.term = userInfo[\"term\"];\n      this.level = levelName[userInfo[\"level\"]];\n      this.levelImage = levelImages[userInfo[\"level\"]];\n      this.idxInvest = userInfo[\"idxInvest\"];\n      this.status = userInfo[\"status\"];\n      this.subNode = web3.utils.fromWei(userInfo[\"subNode\"]);\n      this.selfNode = web3.utils.fromWei(userInfo[\"selfNode\"]);\n      this.refBonus = web3.utils.fromWei(userInfo[\"refBonus\"]);\n      this.touchBonus = web3.utils.fromWei(userInfo[\"touchBonus\"]);\n      this.vBonus = web3.utils.fromWei(userInfo[\"vBonus\"]);\n      this.idSindou = userInfo[\"idSindou\"];\n\n      // console.log(\"idSindou    u:\" + this.idSindou);\n      const amount = await cobWeb.methods\n        .getCurrentInvestAmount(account)\n        .call();\n      this.amount = web3.utils.fromWei(amount);\n      const nodeInvest = await cobWeb.methods.nodeInvest().call();\n      const data = await cobWeb.methods.getTermInfo(nodeInvest[1]).call();\n      this.investAmount = web3.utils.fromWei(data[\"investAmount\"]);\n      this.terms = nodeInvest[1];\n      this.number = nodeInvest[3];\n      const partAmount = await cobWeb.methods.getPartAmount(0, 0).call();\n\n      this.lottery = web3.utils.fromWei(partAmount[\"lottery\"]);\n      this.game = web3.utils.fromWei(partAmount[\"game\"]);\n      this.crowd = web3.utils.fromWei(partAmount[\"crowd\"]);\n    } catch (err) {\n      error(err);\n    }\n  }\n}\n","import { UserStore } from \"./user\";\nimport { I18nStore } from './i18n';\nexport default {\n    userStore: new UserStore(),\n    i18n:new I18nStore(),\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as React from 'react';\n\nconst Loading: React.FC = () => {\n    return (\n        < >\n        </>\n    )\n}\n\nexport default Loading;","import Loadable from \"react-loadable\";\n\nimport Loading from \"./Loading\";\nimport { RouteComponentProps } from \"react-router\";\n\ninterface Route {\n  //路由\n  path: string;\n  //精准匹配\n  exact?: boolean;\n  //页面\n  component: React.ComponentType<RouteComponentProps> | React.ComponentType;\n}\n\nconst routerConfig: Route[] = [\n  {\n    path: \"/\",\n    exact: true,\n    component: Loadable({\n      loader: () => import(\"../pages/\"),\n      loading: Loading\n    })\n  },\n  {\n    path: \"/admin\",\n    exact: true,\n    component: Loadable({\n      loader: () => import(\"../pages/admin/admin\"),\n      loading: Loading\n    })\n  },\n  {\n    path: \"/pAddFund\",\n    exact: true,\n    component: Loadable({\n      loader: () => import(\"../pages/admin/pAddFund\"),\n      loading: Loading\n    })\n  },\n  {\n    path: \"/pPermanent\",\n    exact: true,\n    component: Loadable({\n      loader: () => import(\"../pages/admin/pPermanent\"),\n      loading: Loading\n    })\n  },\n  {\n    path: \"/shareRate\",\n    exact: true,\n    component: Loadable({\n      loader: () => import(\"../pages/admin/pshareRate\"),\n      loading: Loading\n    })\n  },\n  {\n    path: \"/pExtension\",\n    exact: true,\n    component: Loadable({\n      loader: () => import(\"../pages/admin/pExtension\"),\n      loading: Loading\n    })\n  },\n  {\n    path: \"/pInvestList\",\n    exact: true,\n    component: Loadable({\n      loader: () => import(\"../pages/admin/pInvestList\"),\n      loading: Loading\n    })\n  },\n  {\n    path: \"/init\",\n    exact: true,\n    component: Loadable({\n      loader: () => import(\"../pages/admin/init\"),\n      loading: Loading\n    })\n  },\n  \n];\n\nexport default routerConfig;\n","import * as React from \"react\";\nimport { Route, HashRouter as Router } from \"react-router-dom\";\nimport routerConfig from \"./config\";\n\nclass BasicRoute extends React.Component<{}> {\n  public render() {\n    return (\n      <Router>\n        {routerConfig.map(item => {\n          return (\n            <Route\n              key={item.path}\n              path={item.path}\n              exact={item.exact}\n              render={props => {\n                console.log(item);\n                return <item.component {...props} />;\n              }}\n            />\n          );\n        })}\n      </Router>\n    );\n  }\n}\n\nexport default BasicRoute;\n","import { red } from \"@material-ui/core/colors\";\nimport { createMuiTheme, Theme } from \"@material-ui/core/styles\";\nimport { NONAME } from 'dns';\nimport { SSL_OP_NO_TLSv1_1 } from 'constants';\n\n// A custom theme for this app\nconst theme: Theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: \"#556cd6\"\n    },\n    secondary: {\n      main: \"#fff\"\n    },\n    error: {\n      main: red.A400\n    },\n    background: {\n      default: \"#fff\"\n    }\n  },\n \n  overrides: {\n    MuiOutlinedInput:{\n      input:{\n        padding:\"1vw\",\n      },\n      adornedEnd:{\n        paddingRight:\"0.5vw\"\n      }\n    },\n    MuiInputBase: {\n      root:{\n        background:\"#fff\",\n        borderRadius:10,\n        borderWidth:1,\n        borderColor:\"#fff\",\n      },\n      formControl:{},\n    },\n    MuiTouchRipple:{\n      root:{\n     \n      }\n    },\n   \n    MuiTab:{\n    \n      textColorPrimary:{\n        color:\"white\",\n      },\n    },\n    MuiTabs:{\n      indicator:{\n        background: 'linear-gradient(45deg, #333333 30%, #262422 90%)',\n        height:0,\n      }\n    }\n \n  }\n});\n\nexport default theme;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport { ThemeProvider, createGenerateClassName, StylesProvider } from \"@material-ui/core/styles\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport Router from \"./routers\";\nimport theme from \"./theme\";\n\nimport \"./index.css\";\nimport { Provider } from \"mobx-react\";\nimport store from \"./store\";\nimport { ToastContainer } from 'react-toastify';\nconst generateClassName = createGenerateClassName({\n  productionPrefix: 'c',\n});\n\nReactDOM.render(\n  <StylesProvider generateClassName={generateClassName}>\n  <Provider {...store}>\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <Router />\n    </ThemeProvider>\n    <ToastContainer closeButton={false} hideProgressBar={true} />\n  </Provider>\n  </StylesProvider>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();\n","import { toast } from \"react-toastify\";\n\nexport const error = (error: any) => {\n  toast.error(error.message, {\n    autoClose: 2000\n  });\n  console.error(error);\n};\n\n\nexport const isAddressNo = (address: string) => {\n return !address || address === \"0x0000000000000000000000000000000000000000\";\n};\n\nexport const dateFormat = (fmt:string, time:string) =>{\n    \n  let date = new Date(parseInt(time)*1000);\n  // console.log(date);\n  let ret;\n  let opt = {\n      \"Y+\": date.getFullYear().toString(),        // 年\n      \"m+\": (date.getMonth() + 1).toString(),     // 月\n      \"d+\": date.getDate().toString(),            // 日\n      \"H+\": date.getHours().toString(),           // 时\n      \"M+\": date.getMinutes().toString(),         // 分\n      \"S+\": date.getSeconds().toString()          // 秒\n      // 有其他格式化字符需求可以继续添加，必须转化成字符串\n  };\n  for (let k in opt) {\n      ret = new RegExp(\"(\" + k + \")\").exec(fmt);\n      if (ret) {\n          fmt = fmt.replace(ret[1], (ret[1].length === 1) ? (opt[k]) : (opt[k].padStart(ret[1].length, \"0\")))\n      };\n  };\n  // console.log(fmt)\n  return fmt;\n}"],"sourceRoot":""}