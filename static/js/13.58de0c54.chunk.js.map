{"version":3,"sources":["components/common/IButton.tsx","components/common/ILayout.tsx","utils/validate.ts","components/common/Input.tsx","components/admin/Extension.tsx","pages/admin/pExtension.tsx"],"names":["useStyles","makeStyles","root","display","alignItems","wrapper","justifyContent","buttonProgress","color","green","position","top","left","marginTop","marginLeft","button","background","props","borderRadius","padding","IButton","classes","onTap","children","iStore","useLocalStore","loading","handClick","Promise","resolve","setTimeout","useObserver","className","variant","disabled","onClick","size","theme","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","width","easeOut","enteringScreen","menuButton","marginRight","spacing","hide","drawer","flexShrink","drawerPaper","drawerHeader","mixins","toolbar","content","flexGrow","contentShift","ILayout","useTheme","React","useState","open","setOpen","clsx","aria-label","edge","noWrap","anchor","paper","direction","component","href","primary","number","address","validate","schema","values","a","errors","o","validateAt","message","jsonTrim","key","trim","input","marginBottom","end","fontSize","Input","placeholder","name","noEndAdornment","label","type","render","InputProps","endAdornment","store","action","bound","jsonSchema","string","matches","required","object","shape","cobweb","cobWeb","account","web3","methods","getUserInfo","call","userInfo","getCurrentInvestAmount","amount","this","userAddress","ref","available","utils","fromWei","readyTime","term","level","idxInvest","status","subNode","selfNode","error","getSubNodes","data","_data","toggled","map","item","push","node","Object","assign","observable","Extension","initialValues","onSubmit","handleSubmit","submitForm","Grid","container","xs","onToggle","dateFormat","PExtension"],"mappings":"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","file":"static/js/13.58de0c54.chunk.js","sourcesContent":["import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport { green } from \"@material-ui/core/colors\";\n// import Button from \"@material-ui/core/Button\";\nimport Button, { ButtonProps as MuiButtonProps } from '@material-ui/core/Button';\nimport { Omit } from '@material-ui/types';\nimport { useLocalStore, useObserver } from \"mobx-react\";\n\nconst useStyles = makeStyles({\n  root: {\n    // background:'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\n    display: \"flex\",\n    alignItems: \"center\"\n  },\n  wrapper: {\n    display:\"flex\",\n    justifyContent:\"center\",\n    // margin:\"auto\",\n    // position: \"relative\"\n  },\n  buttonProgress: {\n    color: green[500],\n    position: \"absolute\",\n    top: \"50%\",\n    left: \"50%\",\n    marginTop: -12,\n    marginLeft: -12\n  },\n  button:{\n    // background:\"linear-gradient(45deg,#444442 30%, #262422 90%)\",\n    background: (props: Props) =>\n    {\n      return props.color ? props.color : \"linear-gradient(45deg,#444442 30%, #262422 90%)\";\n    },\n    borderRadius:20,\n    padding:\"5px 2vw\",\n    marginTop:\"3vw\"\n  }\n});\n\ninterface Props {\n  onTap?: any;\n  children?: any;\n  color?:any;\n}\n\nconst IButton: React.FC<Props> = (props: Props & Omit<MuiButtonProps, keyof Props>) => {\n  const classes = useStyles(props);\n  const { onTap,children, ...other } = props;\n  const iStore = useLocalStore(() => ({\n    loading: false,\n    async handClick() {\n      if (!iStore.loading) {\n        iStore.loading = true;\n        if (!!onTap) await onTap();\n        await new Promise(resolve => setTimeout(resolve, 1000));\n        iStore.loading = false;\n      }\n    }\n  }));\n  return useObserver(() => (\n  \n      <div className={classes.wrapper}>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          disabled={iStore.loading}\n          onClick={iStore.handClick}\n          className={classes.button}\n        >\n          {children}\n        </Button>\n        {iStore.loading && (\n          <CircularProgress size={24} className={classes.buttonProgress} />\n        )}\n      </div>\n  \n  ));\n};\n\nexport default IButton;\n","import React from \"react\";\nimport clsx from \"clsx\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport List from \"@material-ui/core/List\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Divider from \"@material-ui/core/Divider\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: \"flex\"\n  },\n  appBar: {\n    transition: theme.transitions.create([\"margin\", \"width\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    })\n  },\n  appBarShift: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: drawerWidth,\n    transition: theme.transitions.create([\"margin\", \"width\"], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen\n    })\n  },\n  menuButton: {\n    marginRight: theme.spacing(2)\n  },\n  hide: {\n    display: \"none\"\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0\n  },\n  drawerPaper: {\n    width: drawerWidth\n  },\n  drawerHeader: {\n    display: \"flex\",\n    alignItems: \"center\",\n    padding: theme.spacing(0, 1),\n    ...theme.mixins.toolbar,\n    justifyContent: \"flex-end\"\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n    transition: theme.transitions.create(\"margin\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    }),\n    marginLeft: -drawerWidth\n  },\n  contentShift: {\n    transition: theme.transitions.create(\"margin\", {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen\n    }),\n    marginLeft: 0\n  }\n}));\n\ninterface Props {\n  children?: any;\n}\n\nconst ILayout: React.FC<Props> = ({ children }: Props) => {\n  const classes = useStyles();\n  const theme = useTheme();\n  const [open, setOpen] = React.useState(false);\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar\n        position=\"fixed\"\n        className={clsx(classes.appBar, {\n          [classes.appBarShift]: open\n        })}\n      >\n        <Toolbar>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleDrawerOpen}\n            edge=\"start\"\n            className={clsx(classes.menuButton, open && classes.hide)}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" noWrap>\n            后台管理\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        className={classes.drawer}\n        variant=\"persistent\"\n        anchor=\"left\"\n        open={open}\n        classes={{\n          paper: classes.drawerPaper\n        }}\n      >\n        <div className={classes.drawerHeader}>\n          <IconButton onClick={handleDrawerClose}>\n            {theme.direction === \"ltr\" ? (\n              <ChevronLeftIcon />\n            ) : (\n              <ChevronRightIcon />\n            )}\n          </IconButton>\n        </div>\n        <Divider />\n        <List>\n          <ListItem button component=\"a\" href=\"#/admin\">\n            <ListItemText primary=\"首页\" />\n          </ListItem>\n          <ListItem button component=\"a\" href=\"#/shareRate\">\n            <ListItemText primary=\"配置信息\" />\n          </ListItem>\n          <ListItem button component=\"a\" href=\"#/pAddFund\">\n            <ListItemText primary=\"角色管理\" />\n          </ListItem>\n          <ListItem button component=\"a\" href=\"#/pPermanent\">\n            <ListItemText primary=\"节点管理\" />\n          </ListItem>\n          <ListItem button component=\"a\" href=\"#/pExtension\">\n            <ListItemText primary=\"推广架构\" />\n          </ListItem>\n          <ListItem button component=\"a\" href=\"#/pInvestList\">\n            <ListItemText primary=\"入金列表\" />\n          </ListItem>\n          {/* <ListItem button component=\"a\" href=\"#/init\">\n            <ListItemText primary=\"初始化\" />\n          </ListItem> */}\n        </List>\n      </Drawer>\n      <main\n        className={clsx(classes.content, {\n          [classes.contentShift]: open\n        })}\n      >\n        <div className={classes.drawerHeader} />\n        {children}\n      </main>\n    </div>\n  );\n};\n\nexport default ILayout;\n","export const number = /^[0-9]{1}\\d*(.\\d{1,8})?$|^0.\\d{1,8}$/\nexport const address = /^0x+([0-9a-zA-Z]{40})?$/\n\nexport const validate = async (schema: any, values: any) => {\n  let errors: any = {};\n  for (let o in values) {\n    try {\n      await schema.validateAt(o, values);\n    } catch (error) {\n      errors[o] = error.message;\n    }\n  }\n  return errors;\n};\n\n\nexport const jsonTrim = (values:any)=>{\n  for (const key in values) {\n    values[key] = values[key].trim();\n  }\n  return values;\n} ","import React from \"react\";\nimport { Field } from \"formik\";\nimport { TextField } from \"formik-material-ui\";\nimport {\n  InputAdornment,\n  IconButton,\n  Button,\n  FormControl,\n  InputLabel,\n  FilledInput,\n  Theme,\n  Container\n} from \"@material-ui/core\";\nimport { values } from \"mobx\";\nimport { makeStyles } from \"@material-ui/styles\";\n\ntype Props = {\n  placeholder?: string;\n  name: string;\n  noEndAdornment?: boolean;\n};\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  input: {\n    width: \"100%\",\n    marginBottom: 10\n  },\n  end: {\n    background: \"#3747BC\",\n    color: \"white\",\n    padding: \"0.7vw\",\n    fontSize: \"1vw\",\n    borderRadius: \"0.5vw\"\n  }\n}));\nconst Input: React.FC<Props> = ({ placeholder, name, noEndAdornment }) => {\n  const classes = useStyles();\n  return (\n    <Field\n      name={name}\n      label={placeholder}\n      type=\"text\"\n      // component={}\n      render={(props: any) => {\n        return (\n          <TextField\n            className={classes.input}\n            variant=\"outlined\"\n            color=\"primary\"\n            InputProps={{\n              endAdornment: (\n                <>\n                  {!noEndAdornment && (\n                    <InputAdornment position=\"end\">\n                      <Container className={classes.end}>\n                        {name == \"number\" ? \"ETH\" : \"address\"}\n                      </Container>\n                    </InputAdornment>\n                  )}\n                </>\n              )\n            }}\n            {...props}\n          />\n        );\n      }}\n    />\n  );\n};\n\nexport default Input;\n","import React from \"react\";\nimport { useLocalStore, useObserver } from \"mobx-react\";\nimport { object, string } from \"yup\";\nimport { Formik } from \"formik\";\nimport { validate, jsonTrim, address } from \"src/utils/validate\";\nimport Input from \"../common/Input\";\nimport IButton from \"../common/IButton\";\nimport { observable, action } from \"mobx\";\nimport cobweb from \"src/utils/cobweb\";\nimport { error, dateFormat } from \"src/utils/tools\";\n\nimport { Treebeard } from \"react-treebeard\";\nimport { Grid } from \"@material-ui/core\";\n\ninterface FormData {\n  address?: string;\n}\n\nclass ExtensionStore {\n  @observable\n  data: any = {};\n\n  @observable\n  initialValues: FormData = {\n    address: \"\"\n  };\n\n  @observable\n  userInfo = {\n    userAddress: \"0x0000000000000000000000000000000000000000\",\n    ref: \"0x0000000000000000000000000000000000000000\",\n    available: \"0\", //可用\n    readyTime: \"0\", //下次触碰时间\n    term: \"0\", //轮数\n    level: \"0\", //等级\n    idxInvest: \"0\", //下次从idx开始拿\n    status: \"0\", //0:未初始化,1:局内,2:出局\n    subNode: \"0\", //下级业绩\n    selfNode: \"0\",\n    amount: \"0\" //自\n  };\n\n  @action.bound\n  async validate(values: FormData) {\n    const jsonSchema = {\n      address: string()\n        .trim()\n        .matches(address, \"格式不正确\")\n        .required(\"地址不能为空\")\n    };\n    let errors = await validate(object().shape(jsonSchema), values);\n    return errors;\n  }\n\n  @action.bound\n  async getUserInfo(address: any) {\n    try {\n      const { cobWeb, account, web3 } = await cobweb();\n      // console.log(address)\n      const userInfo = await cobWeb.methods.getUserInfo(address).call();\n      const amount = await cobWeb.methods\n        .getCurrentInvestAmount(address)\n        .call();\n      // //获取用户信息\n      if (!!userInfo) {\n        this.userInfo = {\n          userAddress: userInfo[\"userAddress\"],\n          ref: userInfo[\"ref\"],\n          available: web3.utils.fromWei(userInfo[\"available\"]),\n          readyTime: userInfo[\"readyTime\"],\n          term: userInfo[\"term\"],\n          level: userInfo[\"level\"],\n          idxInvest: userInfo[\"idxInvest\"],\n          status: userInfo[\"status\"],\n          subNode: web3.utils.fromWei(userInfo[\"subNode\"]),\n          selfNode: web3.utils.fromWei(userInfo[\"selfNode\"]),\n          amount: web3.utils.fromWei(amount)\n        };\n      }\n      // console.log(userInfo)\n      // console.log(this.userInfo)\n    } catch (err) {\n      error(err);\n    }\n  }\n\n  @action.bound\n  async handleSubmit(values: FormData) {\n    values = jsonTrim(values);\n    const { cobWeb } = await cobweb();\n    try {\n      const address = values.address;\n      const data = await cobWeb.methods.getSubNodes(address).call();\n      let _data: {\n        name: any;\n        toggled: boolean;\n        children: any[];\n      } = {\n        name: address,\n        toggled: true,\n        children: []\n      };\n      data.map((item: any) => {\n        _data.children.push({\n          name: item,\n          loading: true,\n          children: []\n        });\n      });\n      this.data = _data;\n      \n      await store.getUserInfo(address);\n    } catch (err) {\n      error(err);\n    }\n  }\n\n  @action.bound\n  async onToggle(node: any, toggled: any) {\n    if (node.loading == true) {\n      const { cobWeb } = await cobweb();\n      const data = await cobWeb.methods.getSubNodes(node.name).call();\n      data.map((item: any) => {\n        node.children.push({\n          name: item,\n          loading: true,\n          children: []\n        });\n      });\n      node.loading = false;\n      node.toggled = toggled;\n    }\n    // console.log(node.name)\n    await store.getUserInfo(node.name);\n    this.data = Object.assign({}, this.data);\n  }\n}\n\nconst store = new ExtensionStore();\n\nconst Extension: React.FC = () => {\n  const iStore = useLocalStore(() => store);\n  return useObserver(() => (\n    <>\n      <Formik\n        initialValues={iStore.initialValues}\n        validate={iStore.validate}\n        onSubmit={iStore.handleSubmit}\n        render={({ submitForm }) => (\n          <form>\n            <Input name=\"address\" placeholder=\"地址\" />\n            <IButton onTap={submitForm}>查询</IButton>\n          </form>\n        )}\n      />\n      <Grid container spacing={1}>\n        <Grid item xs={6}>\n          <Treebeard data={iStore.data} onToggle={iStore.onToggle} />\n        </Grid>\n        <Grid item xs>\n          <h1>当前用户信息</h1>\n          <p>推荐人：{iStore.userInfo.ref}</p>\n          <p>可用:{iStore.userInfo.available}</p>\n          <p>\n            下次触碰时间:{\" \"}\n            {dateFormat(\"YYYY-mm-dd HH:MM:SS\", iStore.userInfo.readyTime)}\n          </p>\n          <p>轮数:{iStore.userInfo.term}</p>\n          <p>等级:{iStore.userInfo.level}</p>\n          <p>下次从idx开始拿:{iStore.userInfo.idxInvest}</p>\n          <p>状态:{iStore.userInfo.status}（0:未初始化,1:局内,2:出局）</p>\n          <p>业绩:{iStore.userInfo.subNode}</p>\n          <p>入金总额:{iStore.userInfo.selfNode}</p>\n          <p>当前入金额:{iStore.userInfo.amount}</p>\n        </Grid>\n      </Grid>\n    </>\n  ));\n};\n\nexport default Extension;\n","import React from \"react\";\nimport ILayout from \"src/components/common/ILayout\";\nimport Extension from 'src/components/admin/Extension';\n\nconst PExtension: React.FC = () => {\n  return (\n    <ILayout>\n      <Extension />\n      {/* <PermanentList /> */}\n    </ILayout>\n  );\n};\n\nexport default PExtension;\n"],"sourceRoot":""}